name: Auto Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npx eslint . --fix
      
      - name: Run Prettier
        run: npx prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"
      
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "style: auto-format code"
          branch: ${{ github.head_ref }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      
      - name: Create Issue for Vulnerabilities
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/security-alert.md

  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Playwright
        run: npx playwright install --with-deps
      
      - name: Run Visual Regression Tests
        run: npx playwright test
      
      - name: Run Accessibility Tests
        run: |
          npx pa11y-ci
          npx axe-core-npm .
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

  performance-monitoring:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://anaya-yorke.github.io/The-Edison
          uploadArtifacts: true
          temporaryPublicStorage: true
      
      - name: Run Bundle Analysis
        run: npx bundlesize
      
      - name: Create Performance Report
        if: always()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/performance-report.md

  auto-update-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check for UI Framework Updates
        run: |
          npx browserslist-ga
          npx update-browserslist-db
      
      - name: Update CSS Prefixes
        run: npx autoprefixer
      
      - name: Optimize Images
        run: |
          npx sharp-cli --input "public/images/**/*.{jpg,png}" --output "public/images/optimized"
          npx svgo -f public/images -o public/images/optimized
      
      - name: Create PR for UI Updates
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "chore: auto-update UI assets"
          title: "ðŸ¤– Auto UI Update"
          body: "Automated UI updates including browser compatibility, CSS prefixes, and image optimization"
          branch: "auto-ui-update"
          labels: "ui-update,automated"

  dependency-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check for Non-Major Updates
        run: |
          npm install -g npm-check-updates
          ncu -u --target minor
          npm install
      
      - name: Run Tests After Update
        run: npm test
      
      - name: Create PR for Updates
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "deps: update dependencies"
          title: "ðŸ“¦ Auto Dependency Update"
          body: "Automated dependency updates (minor and patch versions only)"
          branch: "auto-deps-update"
          labels: "dependencies,automated"

  stale-management:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v7
        with:
          stale-issue-message: 'This issue has been automatically marked as stale due to inactivity.'
          stale-pr-message: 'This PR has been automatically marked as stale due to inactivity.'
          days-before-stale: 30
          days-before-close: 7
          exempt-issue-labels: 'security,pinned'
          exempt-pr-labels: 'dependencies,security' 